name: Build slim packages

concurrency:
  group: slim-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - v*
      - e*
  pull_request:
    # GitHub pull_request action is by default triggered when
    # opened reopened or synchronize,
    # we add labeled and unlabeled to the list because
    # the mac job dpends on the PR having a 'Mac' label
    types:
      - labeled
      - unlabeled
      - opened
      - reopened
      - synchronize
  workflow_dispatch:

jobs:
  linux:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        profile:
        - emqx-edge
        - emqx
        - emqx-enterprise
        otp:
        - 24.1.5-3
        elixir:
        - 1.13.1
        os:
        - ubuntu20.04
        - centos7

    # FIXME: use tagged version once merged
    container: "ghcr.io/emqx/emqx-builder/elixir:${{ matrix.elixir }}-${{ matrix.otp }}-${{ matrix.os }}"

    steps:
    - uses: actions/checkout@v1
    - name: prepare
      run: |
        echo "EMQX_NAME=${{ matrix.profile }}" >> $GITHUB_ENV
        echo "CODE_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
        echo "EMQX_PKG_NAME=${{ matrix.profile }}-$(./pkg-vsn.sh)-otp${{ matrix.otp }}-${{ matrix.os }}-amd64" >> $GITHUB_ENV
        echo "EMQX_ELIXIRPKG_NAME=${{ matrix.profile }}-$(./pkg-vsn.sh)-elixir${{ matrix.elixir }}-otp${{ matrix.otp }}-${{ matrix.os }}-amd64" >> $GITHUB_ENV
    - name: Get deps git refs for cache
      id: deps-refs
      run: |
        scripts/get-dep-refs.sh
        make clean-all
    - name: load rocksdb cache
      uses: actions/cache@v2
      with:
        path: |
          _build/default/lib/rocksdb/
          deps/rocksdb/priv/
        key: ${{ matrix.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-amd64-${{ steps.deps-refs.outputs.DEP_ROCKSDB_REF }}
    - name: load quicer cache
      uses: actions/cache@v2
      with:
        path: |
          _build/default/lib/quicer/
          deps/quicer/priv/
        key: ${{ matrix.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-amd64-${{ steps.deps-refs.outputs.DEP_QUICER_REF }}
    - name: build and test zip package
      run: |
        make ${EMQX_NAME}-zip
        .ci/build_packages/tests.sh "$EMQX_PKG_NAME" zip
    - name: run static checks
      if: contains(matrix.os, 'ubuntu')
      run: |
        make static_checks
    - name: build and test deb/rpm packages
      run: |
        make ${EMQX_NAME}-pkg
        .ci/build_packages/tests.sh "$EMQX_PKG_NAME" pkg
    - name: build and test deb/rpm packages (Elixir)
      run: |
        make ${EMQX_NAME}-elixirpkg
        .ci/build_packages/tests.sh "$EMQX_ELIXIRPKG_NAME" elixirpkg
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.profile}}-${{ matrix.otp }}-${{ matrix.os }}
        path: _packages/**/*.zip
  mac:
    strategy:
      fail-fast: false
      matrix:
        profile:
        - emqx
        - emqx-enterprise
        otp:
        - 24.1.5-3
        macos:
        - macos-11
        - macos-10.15

    runs-on: ${{ matrix.macos }}

    steps:
    - uses: actions/checkout@v2
    - name: prepare
      run: |
        brew update
        brew install curl zip unzip gnu-sed kerl unixodbc freetds
        echo "/usr/local/bin" >> $GITHUB_PATH
        echo "EMQX_NAME=${{ matrix.profile }}" >> $GITHUB_ENV
    - uses: actions/cache@v2
      id: cache
      with:
        path: ~/.kerl
        key: otp-${{ matrix.otp }}-${{ matrix.macos }}
    - name: build erlang
      if: steps.cache.outputs.cache-hit != 'true'
      timeout-minutes: 60
      env:
        KERL_BUILD_BACKEND: git
        OTP_GITHUB_URL: https://github.com/emqx/otp
      run: |
        kerl update releases
        kerl build ${{ matrix.otp }}
        kerl install ${{ matrix.otp }} $HOME/.kerl/${{ matrix.otp }}
    - name: Get deps git refs for cache
      id: deps-refs
      run: |
        . $HOME/.kerl/${{ matrix.otp }}/activate
        make ensure-rebar3
        sudo cp rebar3 /usr/local/bin/rebar3
        scripts/get-dep-refs.sh
        make clean-all
    - name: load rocksdb cache
      uses: actions/cache@v2
      with:
        path: _build/default/lib/rocksdb/
        key: ${{ matrix.macos }}-${{ matrix.otp }}-macos-${{ steps.deps-refs.outputs.DEP_ROCKSDB_REF }}
    - name: load quicer cache
      uses: actions/cache@v2
      with:
        path: _build/default/lib/quicer/
        key: ${{ matrix.macos }}-${{ matrix.otp }}-macos-${{ steps.deps-refs.outputs.DEP_QUICER_REF }}
    - name: build ${{ matrix.profile }}
      run: |
        . $HOME/.kerl/${{ matrix.otp }}/activate
        make ensure-rebar3
        sudo cp rebar3 /usr/local/bin/rebar3
        make ${{ matrix.profile }}-zip
    - name: test
      run: |
        pkg_name=$(find _packages/${{ matrix.profile }} -mindepth 1 -maxdepth 1 -iname \*.zip)
        unzip -q $pkg_name
        # gsed -i '/emqx_telemetry/d' ./emqx/data/loaded_plugins
        ./emqx/bin/emqx start || cat emqx/log/erlang.log.1
        ready='no'
        for i in {1..10}; do
          if curl -fs 127.0.0.1:18083/api/v5/status > /dev/null; then
            ready='yes'
            break
          fi
          sleep 1
        done
        if [ "$ready" != "yes" ]; then
          echo "Timed out waiting for emqx to be ready"
          cat emqx/log/erlang.log.1
          exit 1
        fi
        ./emqx/bin/emqx_ctl status
        ./emqx/bin/emqx stop
        rm -rf emqx
    - uses: actions/upload-artifact@v2
      with:
        name: macos
        path: _packages/**/*.zip
